{
  "contractName": "TokenCrowdsale",
  "abi": [
    {
      "constant": true,
      "inputs": [],
      "name": "rate",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "endTime",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "cap",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "goal",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "weiRaised",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "finalize",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "wallet",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "startTime",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "goalReached",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "isFinalized",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "claimRefund",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "beneficiary",
          "type": "address"
        }
      ],
      "name": "buyTokens",
      "outputs": [],
      "payable": true,
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "hasEnded",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "vault",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "token",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "name": "_numberOfTokensToCreate",
          "type": "uint256"
        },
        {
          "name": "_startTime",
          "type": "uint256"
        },
        {
          "name": "_endTime",
          "type": "uint256"
        },
        {
          "name": "_rate",
          "type": "uint256"
        },
        {
          "name": "_goal",
          "type": "uint256"
        },
        {
          "name": "_cap",
          "type": "uint256"
        },
        {
          "name": "_wallet",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "payable": true,
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "anonymous": false,
      "inputs": [],
      "name": "Finalized",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "purchaser",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "beneficiary",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "value",
          "type": "uint256"
        },
        {
          "indexed": false,
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "TokenPurchase",
      "type": "event"
    }
  ],
  "bytecode": "0x60806040526007805460a060020a60ff021916905534801561002057600080fd5b5060405160e080611a7183398101604090815281516020830151918301516060840151608085015160a086015160c0909601519395929391929091828288888888868383101561006f57600080fd5b6000821161007c57600080fd5b600160a060020a038116151561009157600080fd5b6000851161009e57600080fd5b6100b185336401000000006101a4810204565b60008054600160a060020a0319908116600160a060020a0393841617825560019690965560029490945560049290925560038054909416911617909155821190506100fb57600080fd5b60065560078054600160a060020a03191633600160a060020a03161790556000811161012657600080fd5b600354600160a060020a031661013a6101e8565b600160a060020a03909116815260405190819003602001906000f080158015610167573d6000803e3d6000fd5b5060098054600160a060020a031916600160a060020a03929092169190911790556008558183111561019857600080fd5b50505050505050610208565b600082826101b06101f8565b918252600160a060020a03166020820152604080519182900301906000f0801580156101e0573d6000803e3d6000fd5b509392505050565b60405161061680610ad683390190565b604051610985806110ec83390190565b6108bf806102176000396000f3006080604052600436106100d75763ffffffff60e060020a6000350416632c4e722e81146100e25780633197cbb614610109578063355274ea1461011e57806340193883146101335780634042b66f146101485780634bb278f31461015d578063521eb2731461017257806378e97925146101a35780637d3d6522146101b85780638d4e4083146101e15780638da5cb5b146101f6578063b5545a3c1461020b578063ec8ac4d814610220578063ecb70fb714610234578063f2fde38b14610249578063fbfa77cf1461026a578063fc0c546a1461027f575b6100e033610294565b005b3480156100ee57600080fd5b506100f76103f8565b60408051918252519081900360200190f35b34801561011557600080fd5b506100f76103fe565b34801561012a57600080fd5b506100f7610404565b34801561013f57600080fd5b506100f761040a565b34801561015457600080fd5b506100f7610410565b34801561016957600080fd5b506100e0610416565b34801561017e57600080fd5b506101876104d4565b60408051600160a060020a039092168252519081900360200190f35b3480156101af57600080fd5b506100f76104e3565b3480156101c457600080fd5b506101cd6104e9565b604080519115158252519081900360200190f35b3480156101ed57600080fd5b506101cd6104f4565b34801561020257600080fd5b50610187610515565b34801561021757600080fd5b506100e0610524565b6100e0600160a060020a0360043516610294565b34801561024057600080fd5b506101cd6105e0565b34801561025557600080fd5b506100e0600160a060020a0360043516610601565b34801561027657600080fd5b5061018761069a565b34801561028b57600080fd5b506101876106a9565b600080600160a060020a03831615156102ac57600080fd5b6102b46106b8565b15156102bf57600080fd5b6004543492506102d690839063ffffffff6106eb16565b6005549091506102ec908363ffffffff61072116565b60055560008054604080517fa9059cbb000000000000000000000000000000000000000000000000000000008152600160a060020a038781166004830152602482018690529151919092169263a9059cbb92604480820193602093909283900390910190829087803b15801561036157600080fd5b505af1158015610375573d6000803e3d6000fd5b505050506040513d602081101561038b57600080fd5b5051151561039857600080fd5b82600160a060020a031633600160a060020a03167f623b3804fa71d67900d064613da8f94b9617215ee90799290593e1745087ad188484604051808381526020018281526020019250505060405180910390a36103f3610730565b505050565b60045481565b60025481565b60065481565b60085481565b60055481565b60075433600160a060020a0390811691161461043157600080fd5b60075474010000000000000000000000000000000000000000900460ff161561045957600080fd5b6104616105e0565b151561046c57600080fd5b61047461076c565b6040517f6823b073d48d6e3a7d385eeb601452d680e74bb46afe3255a7d778f3a9b1768190600090a16007805474ff0000000000000000000000000000000000000000191674010000000000000000000000000000000000000000179055565b600354600160a060020a031681565b60015481565b600854600554101590565b60075474010000000000000000000000000000000000000000900460ff1681565b600754600160a060020a031681565b60075474010000000000000000000000000000000000000000900460ff16151561054d57600080fd5b6105556104e9565b1561055f57600080fd5b600954604080517ffa89401a000000000000000000000000000000000000000000000000000000008152600160a060020a0333811660048301529151919092169163fa89401a91602480830192600092919082900301818387803b1580156105c657600080fd5b505af11580156105da573d6000803e3d6000fd5b50505050565b60065460055460009111156105f361085b565b806105fb5750805b91505090565b60075433600160a060020a0390811691161461061c57600080fd5b600160a060020a038116151561063157600080fd5b600754604051600160a060020a038084169216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a36007805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0392909216919091179055565b600954600160a060020a031681565b600054600160a060020a031681565b6000806006546106d33460055461072190919063ffffffff16565b111590506106df610863565b80156105fb5750919050565b6000808315156106fe576000915061071a565b5082820282848281151561070e57fe5b041461071657fe5b8091505b5092915050565b60008282018381101561071657fe5b600354604051600160a060020a03909116903480156108fc02916000818181858888f19350505050158015610769573d6000803e3d6000fd5b50565b6107746104e9565b156107e957600960009054906101000a9004600160a060020a0316600160a060020a03166343d726d66040518163ffffffff1660e060020a028152600401600060405180830381600087803b1580156107cc57600080fd5b505af11580156107e0573d6000803e3d6000fd5b50505050610855565b600960009054906101000a9004600160a060020a0316600160a060020a0316638c52dc416040518163ffffffff1660e060020a028152600401600060405180830381600087803b15801561083c57600080fd5b505af1158015610850573d6000803e3d6000fd5b505050505b6108595b565b600254421190565b6000806000600154421015801561087c57506002544211155b91505034151581801561088c5750805b92505050905600a165627a7a723058203ca2ab74dd729b5db0d4db392abc12d9b9097239ab14b889b153c52f5b309d970029608060405234801561001057600080fd5b50604051602080610616833981016040525160008054600160a060020a03191633600160a060020a03908116919091179091558116151561005057600080fd5b60028054600160a060020a031916600160a060020a03929092169190911760a060020a60ff021916905561058d806100896000396000f3006080604052600436106100985763ffffffff7c010000000000000000000000000000000000000000000000000000000060003504166343d726d6811461009d578063521eb273146100b45780638c52dc41146100e55780638da5cb5b146100fa578063c19d93fb1461010f578063cb13cddb14610148578063f2fde38b1461017b578063f340fa011461019c578063fa89401a146101b0575b600080fd5b3480156100a957600080fd5b506100b26101d1565b005b3480156100c057600080fd5b506100c96102ac565b60408051600160a060020a039092168252519081900360200190f35b3480156100f157600080fd5b506100b26102bb565b34801561010657600080fd5b506100c9610349565b34801561011b57600080fd5b50610124610358565b6040518082600281111561013457fe5b60ff16815260200191505060405180910390f35b34801561015457600080fd5b50610169600160a060020a0360043516610368565b60408051918252519081900360200190f35b34801561018757600080fd5b506100b2600160a060020a036004351661037a565b6100b2600160a060020a0360043516610412565b3480156101bc57600080fd5b506100b2600160a060020a0360043516610496565b60005433600160a060020a039081169116146101ec57600080fd5b60006002805460a060020a900460ff169081111561020657fe5b1461021057600080fd5b6002805474ff00000000000000000000000000000000000000001916740200000000000000000000000000000000000000001790556040517f1cdde67b72a90f19919ac732a437ac2f7a10fc128d28c2a6e525d89ce5cd9d3a90600090a1600254604051600160a060020a039182169130163180156108fc02916000818181858888f193505050501580156102a9573d6000803e3d6000fd5b50565b600254600160a060020a031681565b60005433600160a060020a039081169116146102d657600080fd5b60006002805460a060020a900460ff16908111156102f057fe5b146102fa57600080fd5b6002805474ff0000000000000000000000000000000000000000191660a060020a1790556040517f599d8e5a83cffb867d051598c4d70e805d59802d8081c1c7d6dffc5b6aca2b8990600090a1565b600054600160a060020a031681565b60025460a060020a900460ff1681565b60016020526000908152604090205481565b60005433600160a060020a0390811691161461039557600080fd5b600160a060020a03811615156103aa57600080fd5b60008054604051600160a060020a03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a36000805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0392909216919091179055565b60005433600160a060020a0390811691161461042d57600080fd5b60006002805460a060020a900460ff169081111561044757fe5b1461045157600080fd5b600160a060020a03811660009081526001602052604090205461047a903463ffffffff61054b16565b600160a060020a03909116600090815260016020526040902055565b600060016002805460a060020a900460ff16908111156104b257fe5b146104bc57600080fd5b50600160a060020a038116600081815260016020526040808220805490839055905190929183156108fc02918491818181858888f19350505050158015610507573d6000803e3d6000fd5b50604080518281529051600160a060020a038416917fd7dee2702d63ad89917b6a4da9981c90c4d24f8c2bdfd64c604ecae57d8d0651919081900360200190a25050565b60008282018381101561055a57fe5b93925050505600a165627a7a723058204caa4a43b693739c0bfdca36688805ff4e86dab4825845d261103bd4dc8b46e70029608060405234801561001057600080fd5b50604051604080610985833981016040818152825160209384015160038054600160a060020a031916600160a060020a0380841691909117918290551684529151909391927f2e6a5233203ef57f0bc3f27a09ec8db49caa33bdf9dcac109a226904362ca0d892908290030190a1670de0b6b3a764000082026001819055600160a060020a033316600081815260208181526040808320859055805194855251929391927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9281900390910190a35050610896806100ef6000396000f3006080604052600436106100b95763ffffffff7c010000000000000000000000000000000000000000000000000000000060003504166306fdde0381146100be578063095ea7b31461014857806318160ddd1461018057806323b872dd146101a7578063313ce567146101d157806366188463146101fc57806370a082311461022057806395d89b4114610241578063a3e6761014610256578063a9059cbb14610287578063d73dd623146102ab578063dd62ed3e146102cf575b600080fd5b3480156100ca57600080fd5b506100d36102f6565b6040805160208082528351818301528351919283929083019185019080838360005b8381101561010d5781810151838201526020016100f5565b50505050905090810190601f16801561013a5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561015457600080fd5b5061016c600160a060020a036004351660243561032d565b604080519115158252519081900360200190f35b34801561018c57600080fd5b50610195610397565b60408051918252519081900360200190f35b3480156101b357600080fd5b5061016c600160a060020a036004358116906024351660443561039d565b3480156101dd57600080fd5b506101e661051d565b6040805160ff9092168252519081900360200190f35b34801561020857600080fd5b5061016c600160a060020a0360043516602435610522565b34801561022c57600080fd5b50610195600160a060020a036004351661061b565b34801561024d57600080fd5b506100d3610636565b34801561026257600080fd5b5061026b61066d565b60408051600160a060020a039092168252519081900360200190f35b34801561029357600080fd5b5061016c600160a060020a036004351660243561067c565b3480156102b757600080fd5b5061016c600160a060020a0360043516602435610775565b3480156102db57600080fd5b50610195600160a060020a0360043581169060243516610817565b60408051808201909152600a81527f5a61636b20546f6b656e00000000000000000000000000000000000000000000602082015281565b600160a060020a03338116600081815260026020908152604080832094871680845294825280832086905580518681529051929493927f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925929181900390910190a350600192915050565b60015490565b6000600160a060020a03831615156103b457600080fd5b600160a060020a0384166000908152602081905260409020548211156103d957600080fd5b600160a060020a038085166000908152600260209081526040808320339094168352929052205482111561040c57600080fd5b600160a060020a038416600090815260208190526040902054610435908363ffffffff61084216565b600160a060020a03808616600090815260208190526040808220939093559085168152205461046a908363ffffffff61085416565b600160a060020a03808516600090815260208181526040808320949094558783168252600281528382203390931682529190915220546104b0908363ffffffff61084216565b600160a060020a038086166000818152600260209081526040808320338616845282529182902094909455805186815290519287169391927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef929181900390910190a35060019392505050565b601281565b600160a060020a0333811660009081526002602090815260408083209386168352929052908120548083111561057f57600160a060020a0333811660009081526002602090815260408083209388168352929052908120556105b6565b61058f818463ffffffff61084216565b600160a060020a033381166000908152600260209081526040808320938916835292905220555b600160a060020a0333811660008181526002602090815260408083209489168084529482529182902054825190815291517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259281900390910190a35060019392505050565b600160a060020a031660009081526020819052604090205490565b60408051808201909152600481527f5a41434b00000000000000000000000000000000000000000000000000000000602082015281565b600354600160a060020a031681565b6000600160a060020a038316151561069357600080fd5b600160a060020a0333166000908152602081905260409020548211156106b857600080fd5b600160a060020a0333166000908152602081905260409020546106e1908363ffffffff61084216565b600160a060020a033381166000908152602081905260408082209390935590851681522054610716908363ffffffff61085416565b600160a060020a03808516600081815260208181526040918290209490945580518681529051919333909316927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92918290030190a350600192915050565b600160a060020a0333811660009081526002602090815260408083209386168352929052908120546107ad908363ffffffff61085416565b600160a060020a0333811660008181526002602090815260408083209489168084529482529182902085905581519485529051929391927f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259281900390910190a350600192915050565b600160a060020a03918216600090815260026020908152604080832093909416825291909152205490565b60008282111561084e57fe5b50900390565b60008282018381101561086357fe5b93925050505600a165627a7a7230582052472e89168805a901e7476bf39ec9d49b502192af859bcd88b1f038d77b34f60029",
  "deployedBytecode": "0x6080604052600436106100d75763ffffffff60e060020a6000350416632c4e722e81146100e25780633197cbb614610109578063355274ea1461011e57806340193883146101335780634042b66f146101485780634bb278f31461015d578063521eb2731461017257806378e97925146101a35780637d3d6522146101b85780638d4e4083146101e15780638da5cb5b146101f6578063b5545a3c1461020b578063ec8ac4d814610220578063ecb70fb714610234578063f2fde38b14610249578063fbfa77cf1461026a578063fc0c546a1461027f575b6100e033610294565b005b3480156100ee57600080fd5b506100f76103f8565b60408051918252519081900360200190f35b34801561011557600080fd5b506100f76103fe565b34801561012a57600080fd5b506100f7610404565b34801561013f57600080fd5b506100f761040a565b34801561015457600080fd5b506100f7610410565b34801561016957600080fd5b506100e0610416565b34801561017e57600080fd5b506101876104d4565b60408051600160a060020a039092168252519081900360200190f35b3480156101af57600080fd5b506100f76104e3565b3480156101c457600080fd5b506101cd6104e9565b604080519115158252519081900360200190f35b3480156101ed57600080fd5b506101cd6104f4565b34801561020257600080fd5b50610187610515565b34801561021757600080fd5b506100e0610524565b6100e0600160a060020a0360043516610294565b34801561024057600080fd5b506101cd6105e0565b34801561025557600080fd5b506100e0600160a060020a0360043516610601565b34801561027657600080fd5b5061018761069a565b34801561028b57600080fd5b506101876106a9565b600080600160a060020a03831615156102ac57600080fd5b6102b46106b8565b15156102bf57600080fd5b6004543492506102d690839063ffffffff6106eb16565b6005549091506102ec908363ffffffff61072116565b60055560008054604080517fa9059cbb000000000000000000000000000000000000000000000000000000008152600160a060020a038781166004830152602482018690529151919092169263a9059cbb92604480820193602093909283900390910190829087803b15801561036157600080fd5b505af1158015610375573d6000803e3d6000fd5b505050506040513d602081101561038b57600080fd5b5051151561039857600080fd5b82600160a060020a031633600160a060020a03167f623b3804fa71d67900d064613da8f94b9617215ee90799290593e1745087ad188484604051808381526020018281526020019250505060405180910390a36103f3610730565b505050565b60045481565b60025481565b60065481565b60085481565b60055481565b60075433600160a060020a0390811691161461043157600080fd5b60075474010000000000000000000000000000000000000000900460ff161561045957600080fd5b6104616105e0565b151561046c57600080fd5b61047461076c565b6040517f6823b073d48d6e3a7d385eeb601452d680e74bb46afe3255a7d778f3a9b1768190600090a16007805474ff0000000000000000000000000000000000000000191674010000000000000000000000000000000000000000179055565b600354600160a060020a031681565b60015481565b600854600554101590565b60075474010000000000000000000000000000000000000000900460ff1681565b600754600160a060020a031681565b60075474010000000000000000000000000000000000000000900460ff16151561054d57600080fd5b6105556104e9565b1561055f57600080fd5b600954604080517ffa89401a000000000000000000000000000000000000000000000000000000008152600160a060020a0333811660048301529151919092169163fa89401a91602480830192600092919082900301818387803b1580156105c657600080fd5b505af11580156105da573d6000803e3d6000fd5b50505050565b60065460055460009111156105f361085b565b806105fb5750805b91505090565b60075433600160a060020a0390811691161461061c57600080fd5b600160a060020a038116151561063157600080fd5b600754604051600160a060020a038084169216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a36007805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0392909216919091179055565b600954600160a060020a031681565b600054600160a060020a031681565b6000806006546106d33460055461072190919063ffffffff16565b111590506106df610863565b80156105fb5750919050565b6000808315156106fe576000915061071a565b5082820282848281151561070e57fe5b041461071657fe5b8091505b5092915050565b60008282018381101561071657fe5b600354604051600160a060020a03909116903480156108fc02916000818181858888f19350505050158015610769573d6000803e3d6000fd5b50565b6107746104e9565b156107e957600960009054906101000a9004600160a060020a0316600160a060020a03166343d726d66040518163ffffffff1660e060020a028152600401600060405180830381600087803b1580156107cc57600080fd5b505af11580156107e0573d6000803e3d6000fd5b50505050610855565b600960009054906101000a9004600160a060020a0316600160a060020a0316638c52dc416040518163ffffffff1660e060020a028152600401600060405180830381600087803b15801561083c57600080fd5b505af1158015610850573d6000803e3d6000fd5b505050505b6108595b565b600254421190565b6000806000600154421015801561087c57506002544211155b91505034151581801561088c5750805b92505050905600a165627a7a723058203ca2ab74dd729b5db0d4db392abc12d9b9097239ab14b889b153c52f5b309d970029",
  "sourceMap": "663:707:13:-;;;311:31:5;;;-1:-1:-1;;;;;;311:31:5;;;732:481:13;5:2:-1;;;;30:1;27;20:12;5:2;732:481:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1398:22:2;;;;1390:31;;;;;;1443:1;1435:9;;1427:18;;;;;;-1:-1:-1;;;;;1459:14:2;;;;1451:23;;;;;;1514:1;1488:27;;1480:36;;;;;;1531:56;1551:23;1576:10;1531:19;;;;:56;:::i;:::-;1523:5;:64;;-1:-1:-1;;;;;;1523:64:2;;;-1:-1:-1;;;;;1523:64:2;;;;;;-1:-1:-1;1593:22:2;;;;1621:7;:18;;;;1645:4;:12;;;;1663:6;:16;;;;;;;;;;;312:8:1;;;-1:-1:-1;304:17:1;;;;;;327:3;:10;495:5:8;:18;;-1:-1:-1;;;;;;495:18:8;503:10;-1:-1:-1;;;;;495:18:8;;;;-1:-1:-1;635:9:10;;627:18;;;;;;675:6;;-1:-1:-1;;;;;675:6:10;659:23;;:::i;:::-;-1:-1:-1;;;;;659:23:10;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;-1:-1;651:5:10;:31;;-1:-1:-1;;;;;;651:31:10;-1:-1:-1;;;;;651:31:10;;;;;;;;;;688:4;:12;1194:13:13;;;;1186:22;;;;;;732:481;;;;;;;663:707;;1797:196:2;1905:9;1943:23;1968:18;1929:59;;:::i;:::-;;;;-1:-1:-1;;;;;1929:59:2;;;;;;;;;;;;;;-1:-1:-1;1929:59:2;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;-1:-1;1922:66:2;1797:196;-1:-1:-1;;;1797:196:2:o;663:707:13:-;;;;;;;;;;:::o;:::-;;;;;;;;;;:::o;:::-;;;;;;;",
  "deployedSourceMap": "663:707:13:-;;;;;;;;;-1:-1:-1;;;663:707:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2073:21:2;2083:10;2073:9;:21::i;:::-;663:707:13;783:19:2;;8:9:-1;5:2;;;30:1;27;20:12;5:2;783:19:2;;;;;;;;;;;;;;;;;;;;644:22;;8:9:-1;5:2;;;30:1;27;20:12;5:2;644:22:2;;;;249:18:1;;8:9:-1;5:2;;;30:1;27;20:12;5:2;249:18:1;;;;477:19:10;;8:9:-1;5:2;;;30:1;27;20:12;5:2;477:19:10;;;;842:24:2;;8:9:-1;5:2;;;30:1;27;20:12;5:2;842:24:2;;;;513:162:5;;8:9:-1;5:2;;;30:1;27;20:12;5:2;513:162:5;;;;710:21:2;;8:9:-1;5:2;;;30:1;27;20:12;5:2;710:21:2;;;;;;;;-1:-1:-1;;;;;710:21:2;;;;;;;;;;;;;;616:24;;8:9:-1;5:2;;;30:1;27;20:12;5:2;616:24:2;;;;1377:89:10;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1377:89:10;;;;;;;;;;;;;;;;;;;;;;311:31:5;;8:9:-1;5:2;;;30:1;27;20:12;5:2;311:31:5;;;;237:20:8;;8:9:-1;5:2;;;30:1;27;20:12;5:2;237:20:8;;;;1024:121:10;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1024:121:10;;;;2142:595:2;;-1:-1:-1;;;;;2142:595:2;;;;;729:139:1;;8:9:-1;5:2;;;30:1;27;20:12;5:2;729:139:1;;;;826:174:8;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;826:174:8;-1:-1:-1;;;;;826:174:8;;;;;565:24:10;;8:9:-1;5:2;;;30:1;27;20:12;5:2;565:24:10;;;;512:22:2;;8:9:-1;5:2;;;30:1;27;20:12;5:2;512:22:2;;;;2142:595;2274:17;;-1:-1:-1;;;;;2211:25:2;;;;2203:34;;;;;;2251:15;:13;:15::i;:::-;2243:24;;;;;;;;2385:4;;2294:9;;-1:-1:-1;2371:19:2;;2294:9;;2371:19;:13;:19;:::i;:::-;2429:9;;2354:36;;-1:-1:-1;2429:24:2;;2443:9;2429:24;:13;:24;:::i;:::-;2417:9;:36;2606:5;;;:35;;;;;;-1:-1:-1;;;;;2606:35:2;;;;;;;;;;;;;;;:5;;;;;:14;;:35;;;;;;;;;;;;;;;;;;:5;:35;;;5:2:-1;;;;30:1;27;20:12;5:2;2606:35:2;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2606:35:2;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;2606:35:2;2598:44;;;;;;;;2680:11;-1:-1:-1;;;;;2654:57:2;2668:10;-1:-1:-1;;;;;2654:57:2;;2693:9;2704:6;2654:57;;;;;;;;;;;;;;;;;;;;;;;;2718:14;:12;:14::i;:::-;2142:595;;;:::o;783:19::-;;;;:::o;644:22::-;;;;:::o;249:18:1:-;;;;:::o;477:19:10:-;;;;:::o;842:24:2:-;;;;:::o;513:162:5:-;647:5:8;;633:10;-1:-1:-1;;;;;633:19:8;;;647:5;;633:19;625:28;;;;;;565:11:5;;;;;;;564:12;556:21;;;;;;591:10;:8;:10::i;:::-;583:19;;;;;;;;609:14;:12;:14::i;:::-;634:11;;;;;;;652;:18;;-1:-1:-1;;652:18:5;;;;;513:162::o;710:21:2:-;;;-1:-1:-1;;;;;710:21:2;;:::o;616:24::-;;;;:::o;1377:89:10:-;1457:4;;1444:9;;:17;;1377:89;:::o;311:31:5:-;;;;;;;;;:::o;237:20:8:-;;;-1:-1:-1;;;;;237:20:8;;:::o;1024:121:10:-;1068:11;;;;;;;1060:20;;;;;;;;1095:13;:11;:13::i;:::-;1094:14;1086:23;;;;;;1116:5;;:24;;;;;;-1:-1:-1;;;;;1129:10:10;1116:24;;;;;;;;:5;;;;;:12;;:24;;;;;-1:-1:-1;;1116:24:10;;;;;;;-1:-1:-1;1116:5:10;:24;;;5:2:-1;;;;30:1;27;20:12;5:2;1116:24:10;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1116:24:10;;;;1024:121::o;729:139:1:-;817:3;;804:9;;774:4;;-1:-1:-1;804:16:1;833;:14;:16::i;:::-;:30;;;;853:10;833:30;826:37;;729:139;;:::o;826:174:8:-;647:5;;633:10;-1:-1:-1;;;;;633:19:8;;;647:5;;633:19;625:28;;;;;;-1:-1:-1;;;;;902:22:8;;;;894:31;;;;;;957:5;;936:37;;-1:-1:-1;;;;;936:37:8;;;;957:5;;936:37;;957:5;;936:37;979:5;:16;;-1:-1:-1;;979:16:8;-1:-1:-1;;;;;979:16:8;;;;;;;;;;826:174::o;565:24:10:-;;;-1:-1:-1;;;;;565:24:10;;:::o;512:22:2:-;;;-1:-1:-1;;;;;512:22:2;;:::o;462:164:1:-;514:4;526:14;571:3;;543:24;557:9;543;;:13;;:24;;;;:::i;:::-;:31;;526:48;;587:21;:19;:21::i;:::-;:34;;;;-1:-1:-1;612:9:1;462:164;-1:-1:-1;462:164:1:o;202:173:11:-;260:7;;279:6;;275:35;;;302:1;295:8;;;;275:35;-1:-1:-1;327:5:11;;;331:1;327;:5;345;;;;;;;;:10;338:18;;;;369:1;362:8;;202:173;;;;;;:::o;1007:129::-;1065:7;1092:5;;;1110:6;;;;1103:14;;;2845:70:2;2884:6;;:26;;-1:-1:-1;;;;;2884:6:2;;;;2900:9;2884:26;;;;;:6;:26;:6;:26;2900:9;2884:6;:26;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2884:26:2;2845:70::o;1214:159:10:-;1257:13;:11;:13::i;:::-;1253:89;;;1280:5;;;;;;;;;-1:-1:-1;;;;;1280:5:10;-1:-1:-1;;;;;1280:11:10;;:13;;;;;-1:-1:-1;;;1280:13:10;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1280:13:10;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1280:13:10;;;;1253:89;;;1314:5;;;;;;;;;-1:-1:-1;;;;;1314:5:10;-1:-1:-1;;;;;1314:19:10;;:21;;;;;-1:-1:-1;;;1314:21:10;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1314:21:10;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1314:21:10;;;;1253:89;1348:20;;1214:159::o;3232:82:2:-;3302:7;;3296:3;:13;3232:82;:::o;2971:210::-;3023:4;3035:17;3095:20;3062:9;;3055:3;:16;;:34;;;;;3082:7;;3075:3;:14;;3055:34;3035:54;-1:-1:-1;;3118:9:2;:14;;3035:54;3145:31;;;;;3161:15;3145:31;3138:38;;2971:210;;;:::o",
  "source": "pragma solidity 0.4.23;\n\nimport \"./CappedCrowdsale.sol\";\nimport \"./RefundableCrowdsale.sol\";\nimport \"./StandardToken.sol\";\nimport \"./ZackToken.sol\";\n\n/**\n * @title TokenCrowdsale\n * @dev This is an example of a fully fledged crowdsale.\n * The way to add new features to a base crowdsale is by multiple inheritance.\n * In this example we are providing following extensions:\n * CappedCrowdsale - sets a max boundary for raised funds\n * RefundableCrowdsale - set a min goal to be reached and returns funds if it's not met\n *\n * After adding multiple features it's good practice to run integration tests\n * to ensure that subcontracts works together as intended.\n */\ncontract TokenCrowdsale is CappedCrowdsale, RefundableCrowdsale {\n\n  constructor(uint256 _numberOfTokensToCreate, uint256 _startTime, uint256 _endTime, uint256 _rate, uint256 _goal, uint256 _cap, address _wallet)\n    CappedCrowdsale(_cap)\n    FinalizableCrowdsale()\n    RefundableCrowdsale(_goal)\n    Crowdsale(_numberOfTokensToCreate, _startTime, _endTime, _rate, _wallet)\n  {\n    //As goal needs to be met for a successful crowdsale\n    //the value needs to less or equal than a cap which is limit for accepted funds\n    require(_goal <= _cap);\n  }\n\n  /* function createTokenContract(uint256 numberOfTokensToCreate) internal returns (ZackToken) {\n    return new ZackToken(numberOfTokensToCreate);\n  } */\n}\n",
  "sourcePath": "C:\\Users\\Zack\\Documents\\GitHub\\ZackToken\\contracts\\TokenCrowdsale.sol",
  "ast": {
    "absolutePath": "/C/Users/Zack/Documents/GitHub/ZackToken/contracts/TokenCrowdsale.sol",
    "exportedSymbols": {
      "TokenCrowdsale": [
        1347
      ]
    },
    "id": 1348,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1299,
        "literals": [
          "solidity",
          "0.4",
          ".23"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:13"
      },
      {
        "absolutePath": "/C/Users/Zack/Documents/GitHub/ZackToken/contracts/CappedCrowdsale.sol",
        "file": "./CappedCrowdsale.sol",
        "id": 1300,
        "nodeType": "ImportDirective",
        "scope": 1348,
        "sourceUnit": 164,
        "src": "25:31:13",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/C/Users/Zack/Documents/GitHub/ZackToken/contracts/RefundableCrowdsale.sol",
        "file": "./RefundableCrowdsale.sol",
        "id": 1301,
        "nodeType": "ImportDirective",
        "scope": 1348,
        "sourceUnit": 954,
        "src": "57:35:13",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/C/Users/Zack/Documents/GitHub/ZackToken/contracts/StandardToken.sol",
        "file": "./StandardToken.sol",
        "id": 1302,
        "nodeType": "ImportDirective",
        "scope": 1348,
        "sourceUnit": 1298,
        "src": "93:29:13",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/C/Users/Zack/Documents/GitHub/ZackToken/contracts/ZackToken.sol",
        "file": "./ZackToken.sol",
        "id": 1303,
        "nodeType": "ImportDirective",
        "scope": 1348,
        "sourceUnit": 1412,
        "src": "123:25:13",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 1304,
              "name": "CappedCrowdsale",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 163,
              "src": "690:15:13",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_CappedCrowdsale_$163",
                "typeString": "contract CappedCrowdsale"
              }
            },
            "id": 1305,
            "nodeType": "InheritanceSpecifier",
            "src": "690:15:13"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 1306,
              "name": "RefundableCrowdsale",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 953,
              "src": "707:19:13",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_RefundableCrowdsale_$953",
                "typeString": "contract RefundableCrowdsale"
              }
            },
            "id": 1307,
            "nodeType": "InheritanceSpecifier",
            "src": "707:19:13"
          }
        ],
        "contractDependencies": [
          163,
          386,
          509,
          693,
          953
        ],
        "contractKind": "contract",
        "documentation": "@title TokenCrowdsale\n@dev This is an example of a fully fledged crowdsale.\nThe way to add new features to a base crowdsale is by multiple inheritance.\nIn this example we are providing following extensions:\nCappedCrowdsale - sets a max boundary for raised funds\nRefundableCrowdsale - set a min goal to be reached and returns funds if it's not met\n * After adding multiple features it's good practice to run integration tests\nto ensure that subcontracts works together as intended.",
        "fullyImplemented": true,
        "id": 1347,
        "linearizedBaseContracts": [
          1347,
          953,
          509,
          693,
          163,
          386
        ],
        "name": "TokenCrowdsale",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 1345,
              "nodeType": "Block",
              "src": "1039:174:13",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1342,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 1340,
                          "name": "_goal",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1317,
                          "src": "1194:5:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 1341,
                          "name": "_cap",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1319,
                          "src": "1203:4:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "1194:13:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 1339,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1429,
                        1430
                      ],
                      "referencedDeclaration": 1429,
                      "src": "1186:7:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 1343,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1186:22:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1344,
                  "nodeType": "ExpressionStatement",
                  "src": "1186:22:13"
                }
              ]
            },
            "documentation": null,
            "id": 1346,
            "implemented": true,
            "isConstructor": true,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 1324,
                    "name": "_cap",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1319,
                    "src": "896:4:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 1325,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 1323,
                  "name": "CappedCrowdsale",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 163,
                  "src": "880:15:13",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_CappedCrowdsale_$163_$",
                    "typeString": "type(contract CappedCrowdsale)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "880:21:13"
              },
              {
                "arguments": [],
                "id": 1327,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 1326,
                  "name": "FinalizableCrowdsale",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 509,
                  "src": "906:20:13",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_FinalizableCrowdsale_$509_$",
                    "typeString": "type(contract FinalizableCrowdsale)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "906:22:13"
              },
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 1329,
                    "name": "_goal",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1317,
                    "src": "953:5:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 1330,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 1328,
                  "name": "RefundableCrowdsale",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 953,
                  "src": "933:19:13",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_RefundableCrowdsale_$953_$",
                    "typeString": "type(contract RefundableCrowdsale)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "933:26:13"
              },
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 1332,
                    "name": "_numberOfTokensToCreate",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1309,
                    "src": "974:23:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 1333,
                    "name": "_startTime",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1311,
                    "src": "999:10:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 1334,
                    "name": "_endTime",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1313,
                    "src": "1011:8:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 1335,
                    "name": "_rate",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1315,
                    "src": "1021:5:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 1336,
                    "name": "_wallet",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1321,
                    "src": "1028:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 1337,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 1331,
                  "name": "Crowdsale",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 386,
                  "src": "964:9:13",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_Crowdsale_$386_$",
                    "typeString": "type(contract Crowdsale)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "964:72:13"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1322,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1309,
                  "name": "_numberOfTokensToCreate",
                  "nodeType": "VariableDeclaration",
                  "scope": 1346,
                  "src": "744:31:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1308,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "744:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1311,
                  "name": "_startTime",
                  "nodeType": "VariableDeclaration",
                  "scope": 1346,
                  "src": "777:18:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1310,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "777:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1313,
                  "name": "_endTime",
                  "nodeType": "VariableDeclaration",
                  "scope": 1346,
                  "src": "797:16:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1312,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "797:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1315,
                  "name": "_rate",
                  "nodeType": "VariableDeclaration",
                  "scope": 1346,
                  "src": "815:13:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1314,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "815:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1317,
                  "name": "_goal",
                  "nodeType": "VariableDeclaration",
                  "scope": 1346,
                  "src": "830:13:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1316,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "830:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1319,
                  "name": "_cap",
                  "nodeType": "VariableDeclaration",
                  "scope": 1346,
                  "src": "845:12:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1318,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "845:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1321,
                  "name": "_wallet",
                  "nodeType": "VariableDeclaration",
                  "scope": 1346,
                  "src": "859:15:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1320,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "859:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "743:132:13"
            },
            "payable": false,
            "returnParameters": {
              "id": 1338,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1039:0:13"
            },
            "scope": 1347,
            "src": "732:481:13",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 1348,
        "src": "663:707:13"
      }
    ],
    "src": "0:1371:13"
  },
  "legacyAST": {
    "absolutePath": "/C/Users/Zack/Documents/GitHub/ZackToken/contracts/TokenCrowdsale.sol",
    "exportedSymbols": {
      "TokenCrowdsale": [
        1347
      ]
    },
    "id": 1348,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1299,
        "literals": [
          "solidity",
          "0.4",
          ".23"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:13"
      },
      {
        "absolutePath": "/C/Users/Zack/Documents/GitHub/ZackToken/contracts/CappedCrowdsale.sol",
        "file": "./CappedCrowdsale.sol",
        "id": 1300,
        "nodeType": "ImportDirective",
        "scope": 1348,
        "sourceUnit": 164,
        "src": "25:31:13",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/C/Users/Zack/Documents/GitHub/ZackToken/contracts/RefundableCrowdsale.sol",
        "file": "./RefundableCrowdsale.sol",
        "id": 1301,
        "nodeType": "ImportDirective",
        "scope": 1348,
        "sourceUnit": 954,
        "src": "57:35:13",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/C/Users/Zack/Documents/GitHub/ZackToken/contracts/StandardToken.sol",
        "file": "./StandardToken.sol",
        "id": 1302,
        "nodeType": "ImportDirective",
        "scope": 1348,
        "sourceUnit": 1298,
        "src": "93:29:13",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/C/Users/Zack/Documents/GitHub/ZackToken/contracts/ZackToken.sol",
        "file": "./ZackToken.sol",
        "id": 1303,
        "nodeType": "ImportDirective",
        "scope": 1348,
        "sourceUnit": 1412,
        "src": "123:25:13",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 1304,
              "name": "CappedCrowdsale",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 163,
              "src": "690:15:13",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_CappedCrowdsale_$163",
                "typeString": "contract CappedCrowdsale"
              }
            },
            "id": 1305,
            "nodeType": "InheritanceSpecifier",
            "src": "690:15:13"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 1306,
              "name": "RefundableCrowdsale",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 953,
              "src": "707:19:13",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_RefundableCrowdsale_$953",
                "typeString": "contract RefundableCrowdsale"
              }
            },
            "id": 1307,
            "nodeType": "InheritanceSpecifier",
            "src": "707:19:13"
          }
        ],
        "contractDependencies": [
          163,
          386,
          509,
          693,
          953
        ],
        "contractKind": "contract",
        "documentation": "@title TokenCrowdsale\n@dev This is an example of a fully fledged crowdsale.\nThe way to add new features to a base crowdsale is by multiple inheritance.\nIn this example we are providing following extensions:\nCappedCrowdsale - sets a max boundary for raised funds\nRefundableCrowdsale - set a min goal to be reached and returns funds if it's not met\n * After adding multiple features it's good practice to run integration tests\nto ensure that subcontracts works together as intended.",
        "fullyImplemented": true,
        "id": 1347,
        "linearizedBaseContracts": [
          1347,
          953,
          509,
          693,
          163,
          386
        ],
        "name": "TokenCrowdsale",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 1345,
              "nodeType": "Block",
              "src": "1039:174:13",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1342,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 1340,
                          "name": "_goal",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1317,
                          "src": "1194:5:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 1341,
                          "name": "_cap",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1319,
                          "src": "1203:4:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "1194:13:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 1339,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1429,
                        1430
                      ],
                      "referencedDeclaration": 1429,
                      "src": "1186:7:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 1343,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1186:22:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1344,
                  "nodeType": "ExpressionStatement",
                  "src": "1186:22:13"
                }
              ]
            },
            "documentation": null,
            "id": 1346,
            "implemented": true,
            "isConstructor": true,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 1324,
                    "name": "_cap",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1319,
                    "src": "896:4:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 1325,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 1323,
                  "name": "CappedCrowdsale",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 163,
                  "src": "880:15:13",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_CappedCrowdsale_$163_$",
                    "typeString": "type(contract CappedCrowdsale)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "880:21:13"
              },
              {
                "arguments": [],
                "id": 1327,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 1326,
                  "name": "FinalizableCrowdsale",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 509,
                  "src": "906:20:13",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_FinalizableCrowdsale_$509_$",
                    "typeString": "type(contract FinalizableCrowdsale)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "906:22:13"
              },
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 1329,
                    "name": "_goal",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1317,
                    "src": "953:5:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 1330,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 1328,
                  "name": "RefundableCrowdsale",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 953,
                  "src": "933:19:13",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_RefundableCrowdsale_$953_$",
                    "typeString": "type(contract RefundableCrowdsale)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "933:26:13"
              },
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 1332,
                    "name": "_numberOfTokensToCreate",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1309,
                    "src": "974:23:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 1333,
                    "name": "_startTime",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1311,
                    "src": "999:10:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 1334,
                    "name": "_endTime",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1313,
                    "src": "1011:8:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 1335,
                    "name": "_rate",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1315,
                    "src": "1021:5:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 1336,
                    "name": "_wallet",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1321,
                    "src": "1028:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 1337,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 1331,
                  "name": "Crowdsale",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 386,
                  "src": "964:9:13",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_Crowdsale_$386_$",
                    "typeString": "type(contract Crowdsale)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "964:72:13"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1322,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1309,
                  "name": "_numberOfTokensToCreate",
                  "nodeType": "VariableDeclaration",
                  "scope": 1346,
                  "src": "744:31:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1308,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "744:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1311,
                  "name": "_startTime",
                  "nodeType": "VariableDeclaration",
                  "scope": 1346,
                  "src": "777:18:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1310,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "777:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1313,
                  "name": "_endTime",
                  "nodeType": "VariableDeclaration",
                  "scope": 1346,
                  "src": "797:16:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1312,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "797:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1315,
                  "name": "_rate",
                  "nodeType": "VariableDeclaration",
                  "scope": 1346,
                  "src": "815:13:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1314,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "815:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1317,
                  "name": "_goal",
                  "nodeType": "VariableDeclaration",
                  "scope": 1346,
                  "src": "830:13:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1316,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "830:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1319,
                  "name": "_cap",
                  "nodeType": "VariableDeclaration",
                  "scope": 1346,
                  "src": "845:12:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1318,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "845:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1321,
                  "name": "_wallet",
                  "nodeType": "VariableDeclaration",
                  "scope": 1346,
                  "src": "859:15:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1320,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "859:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "743:132:13"
            },
            "payable": false,
            "returnParameters": {
              "id": 1338,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1039:0:13"
            },
            "scope": 1347,
            "src": "732:481:13",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 1348,
        "src": "663:707:13"
      }
    ],
    "src": "0:1371:13"
  },
  "compiler": {
    "name": "solc",
    "version": "0.4.23+commit.124ca40d.Emscripten.clang"
  },
  "networks": {
    "5777": {
      "events": {},
      "links": {},
      "address": "0x4d2d24899c0b115a1fce8637fca610fe02f1909e",
      "transactionHash": "0x398bf8fdaadd3028664c2f279871468b64493d57d0eb3c1113b480ed8526afed"
    }
  },
  "schemaVersion": "2.0.0",
  "updatedAt": "2018-04-28T06:48:50.082Z"
}